Index: include/reactos/exeformat.h
===================================================================
--- include/reactos/exeformat.h	(revision 31533)
+++ include/reactos/exeformat.h	(working copy)
@@ -35,6 +35,7 @@
 typedef NTSTATUS (NTAPI * PEXEFMT_CB_READ_FILE)
 (
  IN PVOID File,
+ ULONG SectorSize,
  IN PLARGE_INTEGER Offset,
  IN ULONG Length,
  OUT PVOID * Data,
Index: ntoskrnl/include/internal/mm.h
===================================================================
--- ntoskrnl/include/internal/mm.h	(revision 31533)
+++ ntoskrnl/include/internal/mm.h	(working copy)
@@ -176,6 +176,9 @@
     ULONG Flags;
     ULONG Characteristics;
     BOOLEAN WriteCopy;
+    LIST_ENTRY ListEntry;
+    ULONG BytesPerSector;
+    PFILE_OBJECT FileObject;
 } MM_SECTION_SEGMENT, *PMM_SECTION_SEGMENT;
 
 typedef struct _MM_IMAGE_SECTION_OBJECT
@@ -192,6 +195,10 @@
     BOOLEAN Executable;
     ULONG NrSegments;
     ULONG ImageSize;
+    ULONG RefCount;
+    LIST_ENTRY ListEntry;
+    PFILE_OBJECT FileObject;
+    ULONG BytesPerSector;
     PMM_SECTION_SEGMENT Segments;
 } MM_IMAGE_SECTION_OBJECT, *PMM_IMAGE_SECTION_OBJECT;
 
@@ -210,6 +217,16 @@
     };
 } ROS_SECTION_OBJECT, *PROS_SECTION_OBJECT;
 
+typedef struct
+{
+   ROS_SECTION_OBJECT* Section;
+   ULONG ViewOffset;
+   LIST_ENTRY ViewListEntry;
+   PMM_SECTION_SEGMENT Segment;
+// BOOLEAN WriteCopyView;
+   LIST_ENTRY RegionListHead;
+} SECTION_DATA, *PSECTION_DATA;
+  
 typedef struct _MEMORY_AREA
 {
     PVOID StartingAddress;
@@ -224,17 +241,10 @@
     ULONG PageOpCount;
     union
     {
+        SECTION_DATA SectionData;
         struct
         {
-            ROS_SECTION_OBJECT* Section;
-            ULONG ViewOffset;
-            PMM_SECTION_SEGMENT Segment;
-            BOOLEAN WriteCopyView;
             LIST_ENTRY RegionListHead;
-        } SectionData;
-        struct
-        {
-            LIST_ENTRY RegionListHead;
         } VirtualMemoryData;
     } Data;
 } MEMORY_AREA, *PMEMORY_AREA;
Index: ntoskrnl/include/internal/cc.h
===================================================================
--- ntoskrnl/include/internal/cc.h	(revision 31533)
+++ ntoskrnl/include/internal/cc.h	(working copy)
@@ -102,17 +102,29 @@
     LONG ActivePrefetches;
 } PFSN_PREFETCHER_GLOBALS, *PPFSN_PREFETCHER_GLOBALS;
 
+#define CACHE_VIEW_SIZE	(128 * 1024) // 128kB
+
+struct _BCB;
+
+typedef struct
+{
+    SECTION_DATA SectionData;
+    PVOID BaseAddress;
+    ULONG RefCount;
+    struct _BCB* Bcb;
+    LIST_ENTRY ListEntry;
+} CACHE_VIEW, *PCACHE_VIEW;
+
 typedef struct _BCB
 {
-    LIST_ENTRY BcbSegmentListHead;
-    LIST_ENTRY BcbRemoveListEntry;
-    BOOLEAN RemoveOnClose;
-    ULONG TimeStamp;
     PFILE_OBJECT FileObject;
-    ULONG CacheSegmentSize;
-    LARGE_INTEGER AllocationSize;
-    LARGE_INTEGER FileSize;
-    KSPIN_LOCK BcbLock;
+    CC_FILE_SIZES FileSizes;
+    BOOLEAN PinAccess;
+    PCACHE_MANAGER_CALLBACKS CallBacks;
+    PVOID LazyWriterContext;
+    PCACHE_VIEW CacheView[2048];
+    PVOID LargeCacheView;
+    PROS_SECTION_OBJECT Section;
     ULONG RefCount;
 #if defined(DBG) || defined(KDBG)
 	BOOLEAN Trace; /* enable extra trace output for this BCB and it's cache segments */
@@ -157,8 +169,8 @@
 typedef struct _INTERNAL_BCB
 {
     PUBLIC_BCB PFCB;
-    PCACHE_SEGMENT CacheSegment;
-    BOOLEAN Dirty;
+    PBCB Bcb;
+    ULONG Index;
     CSHORT RefCount; /* (At offset 0x34 on WinNT4) */
 } INTERNAL_BCB, *PINTERNAL_BCB;
 
Index: ntoskrnl/ntoskrnl.def
===================================================================
--- ntoskrnl/ntoskrnl.def	(revision 31533)
+++ ntoskrnl/ntoskrnl.def	(working copy)
@@ -5,9 +5,6 @@
 ; ReactOS Operating System
 ;
 EXPORTS
-CcRosInitializeFileCache@8
-CcRosReleaseFileCache@4
-CcRosTraceCacheMap@8
 CcCanIWrite@16
 CcCopyRead@24
 CcCopyWrite@20
Index: drivers/filesystems/cdfs/cdfs.h
===================================================================
--- drivers/filesystems/cdfs/cdfs.h	(revision 31533)
+++ drivers/filesystems/cdfs/cdfs.h	(working copy)
@@ -6,7 +6,7 @@
 #include <ntddcdrm.h>
 #include <ccros.h>
 
-#define USE_ROS_CC_AND_FS
+//#define USE_ROS_CC_AND_FS
 
 #define CDFS_BASIC_SECTOR 2048
 #define CDFS_PRIMARY_DESCRIPTOR_LOCATION 16
Index: drivers/filesystems/vfat/vfat.h
===================================================================
--- drivers/filesystems/vfat/vfat.h	(revision 31533)
+++ drivers/filesystems/vfat/vfat.h	(working copy)
@@ -6,7 +6,7 @@
 #ifdef __GNUC__
 #include <ccros.h>
 
-#define USE_ROS_CC_AND_FS
+//#define USE_ROS_CC_AND_FS
 #else
 #define KEBUGCHECK KeBugCheck
 #define KEBUGCHECKEX KeBugCheckEx
Index: drivers/filesystems/ntfs/ntfs.h
===================================================================
--- drivers/filesystems/ntfs/ntfs.h	(revision 31533)
+++ drivers/filesystems/ntfs/ntfs.h	(working copy)
@@ -6,7 +6,7 @@
 #include <ntdddisk.h>
 #include <ccros.h>
 
-#define USE_ROS_CC_AND_FS
+//#define USE_ROS_CC_AND_FS
 
 
 #define CACHEPAGESIZE(pDeviceExt) \
