/*
 * COPYRIGHT:   See COPYING in the top level directory
 * PROJECT:     ReactOS Ancillary Function Driver
 * FILE:        include/afd/shared.h
 * PURPOSE:     Shared definitions for AFD.SYS and MSAFD.DLL
 */
#ifndef __AFD_SHARED_H
#define __AFD_SHARED_H

#include <pshpack1.h>

#define AfdSocket           "AfdSocket"
#define AFD_SOCKET_LENGTH   (sizeof(AfdSocket) - 1)

#define AFD_INFO_RECEIVE_WINDOW_SIZE       0x6
#define AFD_INFO_SEND_WINDOW_SIZE          0x7
#define AFD_INFO_GROUP_ID_TYPE             0x10

typedef struct _AFD_SGID {
    UINT Flags;
    UINT Group;
    UINT TDNameLength;
} AFD_SGID, *PAFD_SGID;

typedef struct _AFD_INFO {
    UINT InfoClass;
    union {
	ULONG Ulong;
	LARGE_INTEGER LargeInteger;
    } Information;
} AFD_INFO, *PAFD_INFO;

typedef struct _AFD_WSABUF {
    UINT  len;
    PCHAR buf;
} AFD_WSABUF, *PAFD_WSABUF;

typedef struct _AFD_BIND_REQ {
    UINT SharedAccess;
    TRANSPORT_ADDRESS Address;
} AFD_BIND_REQ, *PAFD_BIND_REQ;

typedef struct _AFD_LISTEN_REQ {
    UINT UseSAN;
    UINT Backlog;
    UINT DelayedAccept;
} AFD_LISTEN_REQ, *PAFD_LISTEN_REQ;

typedef struct _AFD_CONNECT_REQ {
    AFD_WSABUF CallerData, CalleeData;
    QOS SQos, GQos;
    TRANSPORT_ADDRESS Address;
} AFD_CONNECT_REQ, *PAFD_CONNECT_REQ;

typedef struct _AFD_RECV_REQ {
    PAFD_WSABUF BufferArray;
    ULONG BufferCount;
    ULONG AfdFlags;
    ULONG TdiFlags;
    TDI_CONNECTION_INFORMATION Address;
} AFD_RECV_REQ, *PAFD_RECV_REQ, AFD_SEND_REQ, *PAFD_SEND_REQ;

typedef struct _AFD_POLL_HANDLE {
    HANDLE Handle;
    ULONG Events;
    NTSTATUS Status;
} AFD_POLL_HANDLE, *PAFD_POLL_HANDLE;

typedef struct _AFD_POLL_REQ {
    LARGE_INTEGER Timeout;
    ULONG HandleCount;
    ULONG UnknownMaybeFlags;
    AFD_POLL_HANDLE Handles[1];
} AFD_POLL_REQ, *PAFD_POLL_REQ;

/* AFD IOCTL code definitions */

#define FSCTL_AFD_BASE     FILE_DEVICE_NETWORK /* ??? */

#define AFD_CTL_CODE(Function, Method, Access) \
  CTL_CODE(FSCTL_AFD_BASE, Function, Method, 0)

#define IOCTL_AFD_BIND \
  AFD_CTL_CODE(0, METHOD_BUFFERED, FILE_ANY_ACCESS)

#define IOCTL_AFD_CONNECT \
  AFD_CTL_CODE(1, METHOD_BUFFERED, FILE_ANY_ACCESS)

#define IOCTL_AFD_LISTEN \
  AFD_CTL_CODE(2, METHOD_BUFFERED, FILE_ANY_ACCESS)

#define IOCTL_AFD_LISTEN_WAIT \
  AFD_CTL_CODE(3, METHOD_BUFFERED, FILE_ANY_ACCESS)

#define IOCTL_AFD_ACCEPT \
  AFD_CTL_CODE(4, METHOD_BUFFERED, FILE_ANY_ACCESS)

#define IOCTL_AFD_RECV \
  AFD_CTL_CODE(5, METHOD_BUFFERED, FILE_ANY_ACCESS)

#define IOCTL_AFD_RECVFROM \
  AFD_CTL_CODE(6, METHOD_BUFFERED, FILE_ANY_ACCESS)

#define IOCTL_AFD_SEND \
  AFD_CTL_CODE(7, METHOD_BUFFERED, FILE_ANY_ACCESS)

#define IOCTL_AFD_SENDTO \
  AFD_CTL_CODE(8, METHOD_BUFFERED, FILE_ANY_ACCESS)

#define IOCTL_AFD_SELECT \
  AFD_CTL_CODE(9, METHOD_BUFFERED, FILE_ANY_ACCESS)

#define IOCTL_AFD_GET_TDI_HANDLES \
  AFD_CTL_CODE(13, METHOD_BUFFERED, FILE_ANY_ACCESS)

#define IOCTL_AFD_SET_INFO \
  AFD_CTL_CODE(14, METHOD_BUFFERED, FILE_ANY_ACCESS)

#define IOCTL_AFD_GET_CONTEXT \
  AFD_CTL_CODE(16, METHOD_BUFFERED, FILE_ANY_ACCESS)

#define IOCTL_AFD_SET_CONTEXT \
  AFD_CTL_CODE(17, METHOD_BUFFERED, FILE_ANY_ACCESS)

#define IOCTL_AFD_GET_INFO \
  AFD_CTL_CODE(30, METHOD_BUFFERED, FILE_ANY_ACCESS)

#define IOCTL_AFD_DEFER_ACCEPT \
  AFD_CTL_CODE(35, METHOD_BUFFERED, FILE_ANY_ACCESS)

#define IOCTL_AFD_GET_PENDING_CONNECT_DATA \
  AFD_CTL_CODE(41, METHOD_BUFFERED, FILE_ANY_ACCESS)

#define AFD_EVENT_RECEIVE	     0x1L
#define AFD_EVENT_OOB_RECEIVE	     0x2L
#define AFD_EVENT_SEND		     0x4L
#define AFD_EVENT_DISCONNECT	     0x8L
#define AFD_EVENT_ABORT		     0x10L
#define AFD_EVENT_CLOSE		     0x20L
#define AFD_EVENT_CONNECT	     0x40L
#define AFD_EVENT_ACCEPT	     0x80L
#define AFD_EVENT_CONNECT_FAIL	     0x100L

#include <poppack.h>

#endif /*__AFD_SHARED_H */

/* EOF */
