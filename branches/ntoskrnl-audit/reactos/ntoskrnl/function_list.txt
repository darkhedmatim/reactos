(Nagar refers to Rajeev's book)

ntoskrnl/cc/fs.c

CcGetDirtyPages => STUB
CcGetFileObjectFromBcb => Nagar (not even sure i wrote it).
CcGetLsnForFileObject => STUB
CcInitializeCacheMap => Did not code. (calls CcRos)
CcIsThereDirtyData => STUB
CcPurgeCacheSection => STUB
CcSetFileSizes => Did not code.
CcSetLogHandleForFile => STUB
CcUninitializeCacheMap => Stub/Calls Ccros

ntoskrnl/cc/view.c

CcTryToAcquireBrokenMutex => Did not code (copy-pasted implementation of old mutext impl, renamed).

ntoskrnl/cc/copy.c

CcDeferWrite => STUB
CcFastCopyRead => STUB
CcFastCopyWrite => STUB
CcWaitForCurrentLazyWriterActivity => STUB

ntoskrnl/cc/pin.c

CcPinMappedData => STUB
CcPinRead => Did not code.
CcSetDirtyPinnedData => Did not code.

ntoskrnl/cc/mdl.c

CcMdlRead => STUB
CcMdlReadCompleteDev => Nagar/Trivial implementation.
CcMdlReadComplete => Nagar/Trivial implementation.
CcMdlWriteComplete => Same as read complete, just renamed to *write*
CcMdlWriteCompleteDev => STUB
CcMdlWriteAbort => STUB
CcPrepareMdlWrite => STUB

ntoskrnl/cc/cacheman.c

CcGetFlushedValidData => STUB
CcRemapBcb => STUB
CcScheduleReadAhead => STUB
CcSetAdditionalCacheAttributes => STUB
CcSetBcbOwnerPointer => STUB
CcSetDirtyPageThreshold => STUB
CcSetReadAheadGranularity => STUB

ntoskrnl/cm/ntfunc.c

NtNotifyChangeKey => STUB
NtSaveKeyEx => STUB

ntoskrnl/dbgk/dbgkutil.c

DbgkCreateThread => Not my code

ntoskrnl/dbgk/debug.c

NtCreateDebugObject => Clean/trivial implementation based on the object's structure. I merely create it
                       and then initailize all its memembrs.
NtWaitForDebugEvent => STUB
NtDebugContinue => STUB
NtDebugActiveProcess => STUB
NtRemoveProcessDebug => STUB
NtSetInformationDebugObject => STUB

ntoskrnl/ex/lookas.c

File is clean. I merely rewrote existing versions based on a GPLed IBM driver I found on google, OSR documentation and some DDK sample code. The implementation is trivial and only calls caller-defined functions which are the ones doing the work.
ExpInitLookasideLists
ExiAllocateFromPagedLookasideList
ExiFreeToPagedLookasideList
ExDeleteNPagedLookasideList
ExDeletePagedLookasideList
ExInitializeNPagedLookasideList
ExInitializePagedLookasideList

ntoskrnl/ex/event.c

ExpInitializeEventImplementation
NtCreateEvent
NtOpenEvent
NtPulseEvent
NtQueryEvent
NtResetEvent
NtSetEvent

ntoskrnl/ex/work.c

ExpWorkerThreadEntryPoint
ExpCreateWorkerThread
ExpDetectWorkerThreadDeadlock
ExpCheckDynamicThreadCount
ExpWorkerThreadBalanceManager
ExpInitializeWorkerThreads
ExQueueWorkItem

ntoskrnl/ex/init.c

File is clean. Most of these are ReactOS-internal and specific to our booting cycle, which is entirely incompatible with Windows and broken beyond explenation.
ExpDisplayNotice
ExpLoadInitialProcess
ExInit2

ntoskrnl/ex/atom.c

ExpGetGlobalAtomTable
NtAddAtom
NtDeleteAtom
NtFindAtom
NtQueryInformationAtom

ntoskrnl/ex/mutant.c

ExpInitializeMutantImplementation
NtCreateMutant
NtOpenMutant
NtQueryMutant
NtReleaseMutant

ntoskrnl/ex/win32k.c

I only changed the functions to call Win32K instead of having the code in ntoskrnl. It was a cut/paste job.
ExpWinStaObjectOpen
ExpWin32kInit

ntoskrnl/ex/dbgctrl.c

Modified the function slightly for compatibility with some keys, still has nothing to do with Windows'
NtSystemDebugControl

ntoskrnl/ex/rundown.c

ExfAcquireRundownProtection
ExfAcquireRundownProtectionEx
ExfInitializeRundownProtection
ExfReInitializeRundownProtection
ExfRundownCompleted
ExfReleaseRundownProtection
ExfReleaseRundownProtectionEx
ExfWaitForRundownProtectionRelease
ExfAcquireRundownProtectionCacheAware
ExfAcquireRundownProtectionCacheAwareEx
ExfReleaseRundownProtectionCacheAware
ExfReleaseRundownProtectionCacheAwareEx
ExfWaitForRundownProtectionReleaseCacheAware
ExfRundownCompletedCacheAware
ExfReInitializeRundownProtectionCacheAware
ExAllocateCacheAwareRundownProtection
ExFreeCacheAwareRundownProtection
ExInitializeRundownProtectionCacheAware
ExSizeOfRundownProtectionCacheAware

ntoskrnl/ex/evtpair.c

ExpInitializeEventPairImplementation
NtCreateEventPair
NtOpenEventPair

ntoskrnl/ex/sem.c

ExpInitializeSemaphoreImplementation
NtCreateSemaphore
NtOpenSemaphore
NtQuerySemaphore
NtReleaseSemaphore

ntoskrnl/ex/sysinfo.c

ExEnumHandleTable => STUB
ExGetCurrentProcessorCpuUsage => Written by Thomas. My version was broken.
ExVerifySuite => Trivial implementation
QSI_DEF => Not my code
QSI_DEF => Not my code
SSI_DEF => Not my code

ntoskrnl/ex/resource.c

ExpVerifyResource
ExpCheckForApcsDisabled
ExpResourceInitialization
ExpAllocateExclusiveWaiterEvent
ExpAllocateSharedWaiterSemaphore
ExpExpandResourceOwnerTable
ExpFindFreeEntry
ExpFindEntryForThread
ExpBoostOwnerThread
ExpWaitForResource
ExAcquireResourceExclusiveLite
ExAcquireResourceSharedLite
ExAcquireSharedStarveExclusive
ExAcquireSharedWaitForExclusive
ExConvertExclusiveToSharedLite
ExDeleteResourceLite
ExDisableResourceBoostLite
ExGetExclusiveWaiterCount
ExGetSharedWaiterCount
ExInitializeResourceLite
ExIsResourceAcquiredExclusiveLite
ExIsResourceAcquiredSharedLite
ExReinitializeResourceLite
ExReleaseResourceLite
ExReleaseResourceForThreadLite
ExSetResourceOwnerPointer
ExTryToAcquireResourceExclusiveLite
ExEnterCriticalRegionAndAcquireResourceExclusive
ExReleaseResourceAndLeaveCriticalRegion

ntoskrnl/ex/time.c

As far as I know, all I did were simple formatting/logic changes. I have never reversed windows time functions and know nothing abou them.
ExpInitTimeZoneInfo
ExpSetTimeZoneInformation
NtSetSystemTime
NtQuerySystemTime
ExSetTimerResolution

ntoskrnl/ex/profile.c

ExpDeleteProfile
ExpInitializeProfileImplementation
NtCreateProfile
NtQueryPerformanceCounter
NtQueryIntervalProfile

ntoskrnl/ex/pushlock.c

Parts of my pushlock implementation may be considered dirty, although most of the code was developed cleanly with some help from Thomas (who also had his own implementation half-way done/in mind), as well as with documentation from Dave Probert in Windows Internals II. Thomas should go over these and fix anything up.
ExpInitializePushLocks
ExfWakePushLock
ExpOptimizePushLockList
ExTimedWaitForUnblockPushLock
ExBlockPushLock
ExfAcquirePushLockExclusive
ExfAcquirePushLockShared
ExfReleasePushLock
ExfReleasePushLockShared
ExfReleasePushLockExclusive
ExfTryToWakePushLock
ExfUnblockPushLock

ntoskrnl/ex/error.c

I just re-orgznied the *harderror functions. The SEH filter is a trivial/well-known return of a single value, and __purecall is a stub.
ExpRaiseHardError
ExSystemExceptionFilter
ExRaiseHardError
NtRaiseHardError
_purecall

ntoskrnl/ex/timer.c

ExTimerRundown
ExpDeleteTimer
ExpTimerDpcRoutine
ExpTimerApcKernelRoutine
ExpInitializeTimerImplementation
NtCancelTimer
NtCreateTimer
NtOpenTimer
NtQueryTimer
NtSetTimer

ntoskrnl/ex/fmutex.c

Fixed to work as documented in DDK, also based on patch by Filip Navara. This isn't reversed, because Windows uses an entirely different bit-based algorithm.
ExEnterCriticalRegionAndAcquireFastMutexUnsafe
ExReleaseFastMutexUnsafeAndLeaveCriticalRegion
ExAcquireFastMutex
ExReleaseFastMutex
ExAcquireFastMutexUnsafe
ExReleaseFastMutexUnsafe
ExTryToAcquireFastMutex

ntoskrnl/ex/zone.c

I merely cleaned up David's code, using clean development. I'm not even sure if the Zone functions are still in Windows.
ExExtendZone
ExInterlockedExtendZone
ExInitializeZone

ntoskrnl/ex/uuid.c

ExUuidCreate => STUB

ntoskrnl/fs/util.c

RtlpInitializeResources => Trivial implementation which only allocates the resource buffer.
FsRtlIsTotalDeviceFailure => Based off existing code, clean.
FsRtlAllocateResource => trivial 1-line implementation.
FsRtlBalanceReads => Trivial implementation which only sends an IOCTL to the device and waits for the result.

ntoskrnl/fs/filelock.c

Trivial implementations based on OSR article. There merely call a callback and acquire or free a resource.
FsRtlAcquireFileExclusive
FsRtlReleaseFile

ntoskrnl/fs/fastio.c

FsRtlIncrementCcFastReadResourceMiss
FsRtlIncrementCcFastReadNotPossible
FsRtlIncrementCcFastReadWait
FsRtlIncrementCcFastReadNoWait
FsRtlCopyRead
FsRtlCopyWrite
FsRtlGetFileSize
FsRtlMdlRead
FsRtlMdlReadComplete
FsRtlMdlReadCompleteDev
FsRtlMdlReadDev
FsRtlMdlWriteComplete
FsRtlMdlWriteCompleteDev
FsRtlPrepareMdlWrite
FsRtlPrepareMdlWriteDev

ntoskrnl/fs/name.c

FsRtlAreNamesEqual
FsRtlDissectDbcs
FsRtlDoesDbcsContainWildCards
FsRtlDoesNameContainWildCards
FsRtlIsDbcsInExpression
FsRtlIsFatDbcsLegal
FsRtlIsHpfsDbcsLegal

ntoskrnl/fs/mcb.c

All are either stubs, or me changing the non-large functions to call the large ones. I know nothing about MCBs.
FsRtlGetNextMcbEntry
FsRtlLookupLastLargeMcbEntryAndIndex
FsRtlLookupPerStreamContextInternal
FsRtlLookupPerFileObjectContext
FsRtlLookupLastMcbEntry
FsRtlLookupMcbEntry
FsRtlRemoveMcbEntry
FsRtlResetLargeMcb

ntoskrnl/fs/notify.c

All are stubs.
FsRtlNotifyFilterChangeDirectory
FsRtlNotifyFilterReportChange
FsRtlRegisterFileSystemFilterCallbacks

ntoskrnl/fs/context.c

All are stubs.
FsRtlInsertPerStreamContext
FsRtlRemovePerStreamContext
FsRtlInsertPerFileObjectContext
FsRtlRemovePerFileObjectContext
FsRtlTeardownPerStreamContexts

ntoskrnl/inbv/inbv.c

Only changed function logic. No code added.
InbvDisplayString
NtDisplayString

ntoskrnl/kd/kdinit.c

Not Windows functions, fully clean and self-developed.
KdpGetWrapperDebugMode
KdpGetDebugMode
KdpCallInitRoutine
KdInitSystem

ntoskrnl/kd/kdio.c

Not Windows functions, fully clean and self-developed.
KdpPrintToLogInternal
KdpPrintToLog
KdpInitDebugLog
KdpSerialDebugPrint
KdpSerialInit
KdpScreenPrint
KdpScreenInit
KdpDetectConflicts
KdpPrintString

ntoskrnl/kd/kdmain.c

Not Windows functions, fully clean and self-developed (except some 1-liner stubs)
KdpServiceDispatcher
KdpEnterDebuggerException
KdDisableDebugger
KdEnableDebugger
KdPollBreakIn
KeEnterKernelDebugger
KdPowerTransition
NtQueryDebugFilterState
NtSetDebugFilterState

ntoskrnl/kd/wrappers/bochs.c

Not Windows functions, fully clean and self-developed.
KdpBochsDebugPrint
KdpBochsInit

ntoskrnl/kd/wrappers/gdbstub.c

Not Windows functions, fully clean and self-developed.
GdbPutChar
GdbGetChar
GspGetPacket
GspPutPacket
GspPutPacketNoWait
GspMem2Hex
while
GspComputeSignal
GspHex2Long
GspLong2Hex
GspGetEspFromTrapFrame
GspSetRegistersInTrapFrame
GspSetSingleRegisterInTrapFrame
GspFindThread
GspQueryThreadStatus
KdpGdbEnterDebuggerException
GspBreakIn
KdpGdbDebugPrint
KdpGdbStubInit

ntoskrnl/kdbg/kdb.c

Not Windows functions, fully clean and self-developed.
KdbpGetCommandLineSettings

ntoskrnl/kdbg/kdb_symbols.c

Not Windows functions, fully clean and self-developed.
KdbSymLoadDriverSymbols
KdbSymUnloadDriverSymbols

ntoskrnl/ke/dpc.c

KeFlushQueuedDpcs

ntoskrnl/ke/clock.c

KiInitializeSystemClock
KiSetSystemTime
KeQueryTimeIncrement
KeQueryTickCount
KeQuerySystemTime
KeQueryInterruptTime
KeSetTimeIncrement
KeSetTimeUpdateNotifyRoutine
KeUpdateRunTime
KeUpdateSystemTime
NtGetTickCount
NtQueryTimerResolution
NtSetTimerResolution

ntoskrnl/ke/exception.c

KiContinuePreviousModeUser
KiContinue
KiRaiseException

ntoskrnl/ke/usercall.c

KeUserModeCallback

ntoskrnl/ke/mutex.c

KeReleaseMutant

ntoskrnl/ke/spinlock.c

KeSynchronizeExecution
KeAcquireInterruptSpinLock
KefAcquireSpinLockAtDpcLevel
KeAcquireSpinLockAtDpcLevel
KefReleaseSpinLockFromDpcLevel
KiAcquireSpinLock
KeReleaseInterruptSpinLock
KiReleaseSpinLock
KeAcquireQueuedSpinLockAtDpcLevel
KeReleaseQueuedSpinLockFromDpcLevel
KeAcquireInStackQueuedSpinLockAtDpcLevel
KeReleaseInStackQueuedSpinLockFromDpcLevel

ntoskrnl/ke/wait.c

KiWaitSatisfyAll
KeDelayExecutionThread
KeWaitForSingleObject
KeWaitForMultipleObjects
KiWaitTest
KiAbortWaitThread
KiAcquireFastMutex
KiExitDispatcher

ntoskrnl/ke/gate.c

KeInitializeGate
KeWaitForGate
KeSignalGateBoostPriority

ntoskrnl/ke/kthread.c

KiRequestReschedule
KiInsertIntoThreadList
KiRemoveFromThreadList
KiScanThreadList
KiDispatchThreadNoLock
KiSwapThread
KiDispatchThread
KiUnblockThread
KiAdjustQuantumThread
KiSuspendThreadKernelRoutine
KiSuspendThreadNormalRoutine
KeGetCurrentThread
KeSetPreviousMode
KeGetPreviousMode
KeDisableThreadApcQueueing
KeRundownThread
KeResumeThread
KeFreezeAllThreads
KeSuspendThread
KeForceResumeThread
KeCapturePersistentThreadState
KeInitializeThread
KeQueryPriorityThread
KeQueryBasePriorityThread
KiSetPriorityThread
KeSetBasePriorityThread
KeSetPriorityThread
KeSetAffinityThread
KeTerminateThread

ntoskrnl/ke/device.c

KeFindConfigurationEntry
KeFindConfigurationNextEntry
KeFlushEntireTb
KeSetDmaIoCoherency
KeQueryActiveProcessors
KeSaveStateForHibernate

ntoskrnl/ke/process.c

KeGetCurrentProcess
KiAttachProcess
KeInitializeProcess
KeSetProcess
KiSwapProcess
KeAttachProcess
KeDetachProcess
KeIsAttachedProcess
KeStackAttachProcess
KeUnstackDetachProcess
KeAddSystemServiceTable
KeRemoveSystemServiceTable

ntoskrnl/ke/queue.c

KeInitializeQueue
KeInsertHeadQueue
KeInsertQueue
KeReadStateQueue
KeRemoveQueue
KeRundownQueue
KiWakeQueue
KiInsertQueue

ntoskrnl/ke/profile.c

KeInitializeProfile
KeProfileInterrupt
KeSetProfileIrql

ntoskrnl/ke/i386/exp.c

KiEspFromTrapFrame
KiEspToTrapFrame
KiSsFromTrapFrame
KiSsToTrapFrame
KeContextToTrapFrame
KeTrapFrameToContext
KeInitExceptions
KiDispatchException
KeRaiseUserException

ntoskrnl/ke/i386/irq.c

KeIRQTrapFrameToTrapFrame
KeTrapFrameToIRQTrapFrame
KeDisconnectInterrupt
KeInitializeInterrupt

ntoskrnl/ke/i386/thread.c

Ke386InitThreadWithContext

ntoskrnl/ke/i386/tss.c

Ki386BootInitializeTSS

ntoskrnl/ke/i386/vdm.c

NtEarlyInitVdm

ntoskrnl/ke/i386/kernel.c

KeApplicationProcessorInitDispatcher
KeCreateApplicationProcessorIdleThread
Ki386SetProcessorFeatures

ntoskrnl/ke/i386/gdt.c

KeI386FlatToGdtSelector
KeI386ReleaseGdtSelectors
KeI386AllocateGdtSelectors

ntoskrnl/ke/timer.c

KeCancelTimer
KeInitializeTimer
KeInitializeTimerEx
KeReadStateTimer
KeSetTimer
KeSetTimerEx
KiExpireTimers
KiHandleExpiredTimer
KiInsertTimer

ntoskrnl/ke/kqueue.c

KeRemoveByKeyDeviceQueueIfBusy

ntoskrnl/ke/gmutex.c

KeEnterGuardedRegion
KeLeaveGuardedRegion
KeInitializeGuardedMutex
KiAcquireGuardedMutexContented
KeAcquireGuardedMutexUnsafe
KeReleaseGuardedMutexUnsafe
KeReleaseGuardedMutex
KeTryToAcquireGuardedMutex

ntoskrnl/ke/apc.c

KiCheckForKernelApcDelivery
KeLeaveCriticalRegion
KiRequestApcInterrupt
KiInsertQueueApc
KeInsertQueueApc
KeFlushQueueApc
KeRemoveQueueApc
KiDeliverApc
KiFreeApcRoutine
KiInitializeUserApc
KeAreApcsDisabled

ntoskrnl/lpc/port.c

LpcpInitSystem

ntoskrnl/lpc/reply.c

NtReplyWaitReceivePort
LpcRequestWaitReplyPort

ntoskrnl/mm/pagefile.c

MmIsFileAPagingFile

ntoskrnl/mm/virtual.c

MmGetVirtualForPhysical

ntoskrnl/mm/pe.c

Intsafe_CanAddULongPtr
Intsafe_CanAddLong64
Intsafe_CanAddULong32
Intsafe_AddULong32
Intsafe_CanMulULong32
Intsafe_CanOffsetPointer
IsPowerOf2
ModPow2
IsAligned

ntoskrnl/mm/elf.inc.h

Intsafe_CanAddULongPtr
Intsafe_CanAddULong32
Intsafe_AddULong32
Intsafe_CanAddULong64
Intsafe_AddULong64
Intsafe_CanMulULong32
Intsafe_MulULong32
Intsafe_CanOffsetPointer
ElfFmtpReadULong64
ElfFmtpReadULong
ElfFmtpReadUShort
ElfFmtpSafeReadULong64
ElfFmtpSafeReadULong
ElfFmtpIsPowerOf2
ElfFmtpModPow2
ElfFmtpAlignDown
ElfFmtpAlignUp
Elf64FmtCreateSection

ntoskrnl/mm/pool.c

ExAllocatePoolWithTagPriority
ExAllocatePoolWithQuotaTag
ExQueryPoolBlockSize
MmAllocateMappingAddress
MmFreeMappingAddress
MiRaisePoolQuota

ntoskrnl/mm/wset.c

MmTrimAllSystemPagableMemory

ntoskrnl/mm/physical.c

MmAddPhysicalMemory
MmMarkPhysicalMemoryAsBad
MmMarkPhysicalMemoryAsGood
MmRemovePhysicalMemory
MmGetPhysicalMemoryRanges

ntoskrnl/mm/section.c

MmInitSectionImplementation
ExeFmtpAllocateSegments
ExeFmtpReadFile
MmspAssertSegmentsSorted
MmspAssertSegmentsNoOverlap
MmspAssertSegmentsPageAligned
MmspCompareSegments
MmspSortSegments
MmspCheckSegmentBounds
MmspPageAlignSegments
ExeFmtpCreateImageSection
MmCreateImageSection
MmMapViewInSessionSpace
MmUnmapViewInSessionSpace

ntoskrnl/mm/npool.c

MiAllocateSpecialPool

ntoskrnl/mm/elf32.c

ElfFmtCreateSection

ntoskrnl/mm/process.c

MmGrowKernelStack

ntoskrnl/mm/verifier.c

MmAddVerifierThunks
MmIsDriverVerifying
MmIsVerifierEnabled

ntoskrnl/mm/anonmem.c

NtAllocateVirtualMemory

ntoskrnl/mm/mdl.c

MmAdvanceMdl
MmMapLockedPagesWithReservedMapping
MmUnmapReservedMapping
MmPrefetchPages
MmProtectMdlSystemAddress
MmProbeAndLockProcessPages
MmProbeAndLockSelectedPages

ntoskrnl/mm/paging.c

MmMapUserAddressesToPage

ntoskrnl/ob/object.c

ObpCaptureObjectName
ObpCaptureObjectAttributes
ObQueryNameString
ObpAllocateObject
ObCreateObject
ObpDeleteObject
ObpDeleteObjectWorkRoutine
ObInitializeFastReference
ObFastReferenceObject
ObFastDereferenceObject
ObFastReplaceObject

ntoskrnl/ob/security.c

ObLogSecurityDescriptor

ntoskrnl/ob/wait.c

NtWaitForMultipleObjects
NtWaitForSingleObject
NtSignalAndWaitForSingleObject

ntoskrnl/ob/symlink.c

ObInitSymbolicLinkImplementation

ntoskrnl/ob/handle.c

ObInsertObject

ntoskrnl/ob/namespc.c

ObReferenceObjectByName
ObQueryDeviceMapInformation
ObpCreateDirectory
ObInit
ObpCreateTypeObject

ntoskrnl/po/power.c

NtInitiatePowerAction

ntoskrnl/ps/win32.c

PsEstablishWin32Callouts
PsConvertToGuiThread

ntoskrnl/ps/quota.c

PsChargePoolQuota
PsChargeProcessNonPagedPoolQuota
PsChargeProcessPagedPoolQuota
PsChargeProcessPoolQuota
PsReturnPoolQuota
PsReturnProcessNonPagedPoolQuota
PsReturnProcessPagedPoolQuota

ntoskrnl/ps/security.c

PspLockProcessSecurityShared
PspUnlockProcessSecurityShared
NtOpenProcessToken
NtOpenProcessTokenEx
PsReferencePrimaryToken
PsOpenTokenOfProcess
PspInitializeProcessSecurity
PspAssignPrimaryToken
PsAssignImpersonationToken
PsRevertToSelf
PsRevertThreadToSelf
PsImpersonateClient
PsReferenceEffectiveToken
NtImpersonateThread
PsReferenceImpersonationToken
PsDereferenceImpersonationToken
PsDereferencePrimaryToken
PsDisableImpersonation
PsRestoreImpersonation

ntoskrnl/ps/thread.c

PspThreadSpecialApc
PspUserThreadStartup
PspSystemThreadStartup
PspCreateThread
PsCreateSystemThread
PsLookupThreadByThreadId
PsGetThreadFreezeCount
PsGetThreadHardErrorsAreDisabled
PsGetThreadId
PsGetThreadProcess
PsGetThreadProcessId
PsGetThreadSessionId
PsGetThreadTeb
PsGetThreadWin32Thread
PsGetCurrentThreadPreviousMode
PsGetCurrentThreadStackBase
PsGetCurrentThreadStackLimit
PsIsThreadTerminating
PsIsSystemThread
PsIsThreadImpersonating
PsSetThreadHardErrorsAreDisabled
PsSetThreadWin32Thread
NtCreateThread
NtOpenThread
NtYieldExecution
NtTestAlert

ntoskrnl/ps/query.c

NtQueryInformationProcess
NtSetInformationProcess
PiQuerySystemProcessInformation
NtSetInformationThread
NtQueryInformationThread

ntoskrnl/ps/notify.c

PsSetCreateProcessNotifyRoutine
PsSetLegoNotifyRoutine
PsRemoveLoadImageNotifyRoutine
PsSetLoadImageNotifyRoutine
PsRemoveCreateThreadNotifyRoutine
PsSetCreateThreadNotifyRoutine
PspRunCreateThreadNotifyRoutines
PspRunCreateProcessNotifyRoutines
PspRunLoadImageNotifyRoutines
PspRunLegoRoutine

ntoskrnl/ps/suspend.c

NtResumeThread
NtSuspendThread

ntoskrnl/ps/job.c

PsInitJobManagment
NtQueryInformationJobObject
NtSetInformationJobObject
PsGetJobLock
PsGetJobSessionId
PsGetJobUIRestrictionsClass
PsSetJobUIRestrictionsClass

ntoskrnl/ps/idle.c

PsInitializeIdleOrFirstThread
PsInitIdleThread

ntoskrnl/ps/process.c

PsLockProcess
PsUnlockProcess
PsGetNextProcess
PspCreateProcess
PsCreateSystemProcess
PsLookupProcessByProcessId
PsLookupProcessThreadByCid
PsGetProcessDebugPort
PsGetProcessExitProcessCalled
PsGetProcessExitStatus
PsGetProcessId
PsGetProcessImageFileName
PsGetProcessInheritedFromUniqueProcessId
PsGetProcessJob
PsGetProcessPeb
PsGetProcessPriorityClass
PsGetCurrentProcessId
PsGetCurrentProcessSessionId
PsGetProcessSectionBaseAddress
PsGetProcessSecurityPort
PsGetProcessSessionId
PsGetWin32Thread
PsGetWin32Process
PsGetProcessWin32Process
PsGetProcessWin32WindowStation
PsIsProcessBeingDebugged
PsSetProcessPriorityClass
PsSetProcessSecurityPort
PsSetProcessWin32Process
PsSetProcessWindowStation
NtCreateProcess

ntoskrnl/ps/psmgr.c

PsInitClientIDManagment
PsInitThreadManagment
PsInitProcessManagment
PspPostInitSystemProcess
PspLookupKernelUserEntryPoints
PspMapSystemDll
PsLocateSystemDll
PsGetVersion

ntoskrnl/ps/kill.c

PspReapRoutine
PspKillMostProcesses
PspTerminateProcessThreads
PspDeleteProcess
PspDeleteThread
PspExitThread
PsExitSpecialApc
PspExitNormalApc
PspTerminateThreadByPointer
NtTerminateThread
PsTerminateSystemThread
NtRegisterThreadTerminatePort

ntoskrnl/ps/debug.c

PspGetOrSetContextKernelRoutine
NtGetContextThread
NtSetContextThread
PspDumpThreads

ntoskrnl/rtl/libsupp.c

All these are ReactOS-Only for /lib compatibility.
RtlpCheckForActiveDebugger
RtlpSetInDbgPrint
RtlAcquirePebLock
RtlReleasePebLock
LdrShutdownThread
RtlpCurrentPeb
RtlpCheckLogException
RtlpHandleDpcStackException

ntoskrnl/rtl/misc.c

DebugPrint

ntoskrnl/se/semgr.c

I only moved some Ob code into the default method, and cleaned up initailization of the exports.
SepInitExports
SeDefaultObjectMethod
SeAssignSecurityEx

ntoskrnl/se/access.c

Implemented based on a clean patch.
SeCreateAccessState
SeDeleteAccessState
SeSetAccessStateGenericMapping

As far as I know, all these are stubs or maybe me fixing a bug. I know
absolutely nothign about Se, nor have ever reversed it in my life.

ntoskrnl/se/sd.c

SeSetWorldSecurityDescriptor
SeSetSecurityDescriptorInfoEx

ntoskrnl/se/token.c

SeExchangePrimaryToken
SeDeassignPrimaryToken
SeAppendPrivileges
SeCreateClientSecurityFromSubjectContext
SeFilterToken
SeFreePrivileges
SeImpersonateClientEx
SepInitializeTokenImplementation
SeQueryInformationToken
SeQuerySessionIdToken
SeTokenIsAdmin
SeTokenIsRestricted
SeTokenIsWriteRestricted

ntoskrnl/se/audit.c

SeAuditHardLinkCreation
SeAuditingFileEvents
SeAuditingFileEventsWithContext
SeAuditingHardLinkEvents
SeAuditingHardLinkEventsWithContext
SeAuditingFileOrGlobalEvents
SeCloseObjectAuditAlarm
SePrivilegeObjectAuditAlarm

ntoskrnl/se/lsa.c

SeMarkLogonSessionForTerminationNotification
SeRegisterLogonSessionTerminatedRoutine
SeUnregisterLogonSessionTerminatedRoutine
