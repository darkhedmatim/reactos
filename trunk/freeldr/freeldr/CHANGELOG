Changes in v1.7.6 (8/31/2002) (ekohl)

- bootsect/isoboot.asm: Reduced read transfer size to ensure that
  the read buffer for an int13/ah=42h (exended read) does not
  cross a segment boundary.
- freeldr.c, bootmgr.c, setupldr.c, makefile: Renamed
  LoadBootManager() and ReactOSRunSetupLoader() to RunLoader().
  Either bootmgr.o or setupldr.o is used to build freeldr.sys or
  setupldr.sys  

Changes in v1.7.5 (8/21/2002) (brianp)

- biosvid.S (BiosVideoDisableBlinkBit): Added code to
  disable the blink bit in the text mode character
  attribute byte so that the full range of
  background colors can be used.

Changes in v1.7.4 (8/20/2002) (brianp)

- Boot sector code now reports to freeldr.sys the partition
  that it was installed on. This is specified by a byte
  value in the boot sector code. By default the boot partition
  is set to zero which indicates the active (bootable)
  partition, unless the installer sets the value to non-zero.
  If FreeLoader is installed on a partition other than
  the active (bootable) partition then the installer must
  set this byte to that partition number. Otherwise
  FreeLoader will not be able to find freeldr.ini.
- i386trap.S: Added debug macros BREAKPOINT(),
  INSTRUCTION_BREAKPOINTX(), MEMORY_READWRITE_BREAKPOINTX(), &
  MEMORY_WRITE_BREAKPOINTX().
- partition.c (DiskGetPartitionEntry): Add the relative offset
  of the extended partition to the partitions start sector.
- ext2.c (Ext2ReadBlockPointerList, Ext2CopyIndirectBlockPointers,
  Ext2CopyDoubleIndirectBlockPointers, Ext2CopyTripleIndirectBlockPointers):
  Rewrote the block pointer functions so they actually work.
- ini_init.c (IniFileInitialize, IniOpenIniFile): Looks for freeldr.ini
  on both the active (bootable) partition and the partition
  passed in from the boot sector code.
- meminit.c (MmInitializeMemoryManager, MmFixupSystemMemoryMap,
  MmGetEndAddressOfAnyMemory, MmGetAddressablePageCountIncludingHoles,
  MmInitPageLookupTable): Fixed bug that would cause FreeLoader to
  have an off-by-one error when accessing the last entry in the
  page lookup table on systems with 4GB of memory (or memory mapped
  at the end of the address space).

Changes in v1.7.2 (8/7/2002) (brianp)

- Fragment size must be equal to the block size

Changes in v1.7.1 (8/7/2002) (brianp)

- Symbolic links on EXT2/3 are now supported

Changes in v1.7 (8/6/2002) (brianp)

- EXT2/EXT3 file system support.
- Does not yet support symbolic links or booting from an EXT2/3 partition.
- Fixed bug in UI code.
- Added '%%' format specifier to printf()-like functions.
- Added functions __udivdi3 & __umoddi3 so that 64-bit division is now supported.
- Changed types BYTE, WORD, DWORD, LONG, ULONG to U8, U16, U32, S32, U32
  so that you know the size of the variable across different
  architectures with different sized words & dwords, etc.
- Types CHAR, UCHAR, PCHAR, PUCHAR, WCHAR, PWCHAR have not been
  changed yet (I haven't decided exactly how I'm going to handle unicode)

Changes in v1.6.2 (7/28/2002) (brianp)

- Fix for GetFatEntry16 bug (fathelp.asm) by Mike Lerwill

Changes in v1.6.1 (7/22/2002) (brianp)

- Fix for disk caching while doing drive remapping

Changes in v1.6 (7/21/2002) (brianp)

- Added BIOS drive mapping functionality

Changes in v1.5 (7/13/2002)

- If symbols are available then pass them to the OS as multiboot modules

Changes in v1.4 (6/27/2002)

- Added separate configuration for a SETUPLDR version

Changes in v1.3.1 (6/8/2002)

- Implemented MmAllocateMemoryAtAddress()
- Fixed Linux boot code to go through the memory manager to allocate memory at 1MB

Changes in v1.3 (6/5/2002)

- Added protected mode exception handling in case FreeLoader crashes
- Reworked memory manager to use all of extended memory
- Reworked UI code, now supports multiple text-mode resolutions

Changes in v1.2.2 (5/4/2002)

- Fixed memory leak in menu.c

Changes in v1.2.1 (5/3/2002)

- Makefile updates
- Optimized the Makefile
- Removed recursive make functionality (builds much faster now)
- Places all output into one single directory
- Added automagically generated dependencies

Changes in v1.2 (4/30/2002)

- All Linux kernels are supported (zImage & bzImage, loaded high & low)
- Initrd support
- FreeLoader now compiles under Mingw32 instead of just DJGPP, but
  the Mingw32 linker seems to output a corrupt binary.

Changes in v1.01 (4/28/2002)

- Fixed FAT short file name buffer overflow that was causing
  some long filenames not to work correctly.

Changes in v1.0 (4/24/2002)

- FreeLoader version 1.0!
- Supports booting ReactOS
- Supports booting Linux bzImage kernels
- No initrd support (yet)
- No zImage support (yet)
- No ext2 file system support (yet)
- Supports FAT & ISO-9660 file systems
- Forward slashes '/' as well as backslashes '\' can be used
  for path names in FAT & ISO-9600
- Fixed bug in LBA code where it was only reading one sector
  even if you asked for more
- Fixed bug in FAT code, was also present in ISO-9660 code where
  it wasn't incrementing the buffer address correctly
