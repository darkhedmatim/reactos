<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        xCR9mz1Q2wAAAABJRU5ErkJggg==
</value>
  </data>
</root>