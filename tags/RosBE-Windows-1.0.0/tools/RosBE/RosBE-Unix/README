                           ReactOS Build Environment
                 Version 0.3.6 for Unix-based operating systems
                     by Colin Finck (mail@colinfinck.de)

Introduction
-------------
  The ReactOS Build Environment ("RosBE") is a Build Environment for building
ReactOS. This version is targeted at Unix-based operating systems such as
Linux or FreeBSD.
  The Installation process of the Build Environment is divided into two parts.
  First a script builds the needed compiler tools for your operating system
and installs them. Therefore the "gcc" compiler for your system and some
other build tools have to be installed.
  Then another script creates a shortcut for you. This shortcut opens a
Terminal window and prepares all environment settings for building ReactOS.


Needed Applications
--------------------
  Make sure that the following applications are installed on your system.
They are needed to build the compiler tools. The "RosBE-Builder.sh" script
automatically checks for them:

  * GNU Bash
    The executable file and the package name are often called "bash".
    All scripts are designed to work only under the Bash shell. Please also
    make sure that the file "/bin/bash" exists. For example FreeBSD usually
    installs Bash into another directory, so you have to create a symbolic
    link "/bin/bash" to the executable file.

  * GNU Bison
    The executable file and the package name are often called "bison".

  * Flex
    The executable file and the package name are often called "flex".

  * GNU GCC
    You need the GCC compiler, which is suitable for your system. The
    executable file and the package name are often called "gcc".
    Your GCC compiler needs to be able to compile both C and C++ sources.
    Therefore the "g++" module also has to be installed.

  * Grep
    The executable file and the package name are often called "grep".

  * GNU Make
    Make sure that you have the GNU version of "make" installed. For example
    FreeBSD uses another version. The executable file and the package name
    are often called "make" or "gmake".

  * GNU Makeinfo
    The executable file is often called "makeinfo". Usually this file is in a
    package called "texinfo".


Installation
-------------
  The Installation of RosBE is very simple, since there are scripts, which do
most of the work for you. Follow these steps to compile and install RosBE for
your used operating system:

  1. Open a Terminal window and type "su" to become "root" user.
  2. Call the "RosBE-Builder.sh" script in the directory of the unpacked
     RosBE files.
  3. Follow the directions on the screen until the script ends with "Finished
     successfully!"
  4. Type "exit" to switch back to your normal user account. Then call the
     "createshortcut.sh" script in the installation directory (usually this
     is "/usr/RosBE").
  5. Follow the directions on the screen to create a shortcut for the Build
     Environment.

  After that you can easily open a Build Environment for ReactOS by opening
the shortcut.


Version Information
--------------------
  This version of RosBE for Unix-based operating systems uses the following
components:

  * Binutils 20070422 (CVS version)
    patched with "winres_64bit.diff"
    (http://sourceware.org/bugzilla/attachment.cgi?id=1733&action=view)

  * GCC 4.1.3-prerelease (SVN version, r124026)
    patched with "gcc-virtual-stdcall.patch"
    (http://www.apiviewer.de/downloads/gcc-virtual-stdcall.patch)
    NOTE: This GCC version only supports C and C++

  * Make 20070422 (CVS version)
    patched with "make-strcmpi-strcasecmp.patch"
    (http://savannah.gnu.org/file/make-strcmpi-strcasecmp.patch?file_id=12544)

  * Mingw-runtime 3.12
  * Nasm 0.98.39
  * w32api 3.9


Tested Operating Systems
-------------------------
  Although the Build Environment is designed to work on all Unix-based
operating systems, I only tested it on the following systems:

  * Debian GNU/Linux 4.0
  * FreeBSD 6.2
  * Ubuntu 7.04

You should be able to compile the build tools on both i386 (32-bit) and
x86_64 (64-bit) systems.


Websites
---------
MingW - Minimalist GNU for Windows
http://www.mingw.org

Binutils, the Binary Tools Collection
http://www.gnu.org/software/binutils

GCC, the GNU Compiler Collection
http://www.gcc.org

Make, the Makefile processor
http://www.gnu.org/software/make

NASM, the Netwide Assembler
http://nasm.sourceforge.net


Credits
--------
  Credits go to blight, dralnix and EmuandCo, who created the original ReactOS
Build Environment for Windows. My Unix version uses many ideas of it.
  Special thanks also to ROSFan, who created the nice ReactOS Build
Environment Logo.
