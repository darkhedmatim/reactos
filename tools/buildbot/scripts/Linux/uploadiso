#!/bin/bash

KEY=../../fezile.cute.se.key
SSHUSER=rosbuild
HOST=$SSHUSER@fezile.cute.se
HOMEDIR=/home/$SSHUSER
ISOPATH=$HOMEDIR/isostorage
TEMPDIR=$HOMEDIR/temp/$1
SSHOPTS="-o StrictHostKeyChecking=no -l $SSHUSER -p 22 -i $KEY $HOST"
LCDD=livecd
BCDD=bootcd

if [ -f ReactOS.iso  ]; then
	BOOTCD=1
fi
if [ -f ReactOS-LiveCD.iso  ]; then
	LIVECD=1
fi

if [ ! $BOOTCD -eq 1 -a $LIVECD -eq 1 ]; then
	# nothing to do
	echo "* There are no ISO files to process."
	exit 2
fi

echo "* Getting revision number..."
REV=$(svnversion .)
echo -e "* Revision $REV.\n"

BOOT=bootcd-$REV-$1
LIVE=livecd-$REV-$1

echo "* Rsyncing ISO files onto iso.reactos.org..."
rsync --stats -e "ssh -o StrictHostKeyChecking=no -l $SSHUSER -p 22 -i $KEY" -avz --include=ReactOS.iso --include=ReactOS-LiveCD.iso --exclude=* ./ $HOST:$TEMPDIR
echo -e "* Done.\n"

if [ $BOOTCD ]; then
	echo "* Remotely compressing $BOOT..."
	ssh $SSHOPTS "ln $TEMPDIR/ReactOS.iso $TEMPDIR/$BOOT.iso"
	ssh $SSHOPTS "7za a -bd -t7z $TEMPDIR/$BOOT.7z $TEMPDIR/$BOOT.iso -mx9" | tail -n +4
	ssh $SSHOPTS "rm $TEMPDIR/$BOOT.iso"
	ssh $SSHOPTS "mv $TEMPDIR/$BOOT.7z $ISOPATH/$BCDD/"
	ssh $SSHOPTS "chmod 0744 $ISOPATH/$BCDD/$BOOT.7z"
else
	echo "* There is no $BOOT to compress."
fi

if [ $LIVECD ]; then
	echo "* Remotely compressing $LIVE..."
	ssh $SSHOPTS "ln $TEMPDIR/ReactOS-LiveCD.iso $TEMPDIR/$LIVE.iso"
	ssh $SSHOPTS "7za a -bd -t7z $TEMPDIR/$LIVE.7z $TEMPDIR/$LIVE.iso -mx9" | tail -n +4
	ssh $SSHOPTS "rm $TEMPDIR/$LIVE.iso"
	ssh $SSHOPTS "mv $TEMPDIR/$LIVE.7z $ISOPATH/$LCDD/"
	ssh $SSHOPTS "chmod 0744 $ISOPATH/$LCDD/$LIVE.7z"
else
	echo "* There is no $LIVE to compress."
fi

